import{_ as e,c as t,o,N as a}from"./chunks/framework.0799945b.js";const r="/assets/00_img1.b9a590c0.png",f=JSON.parse('{"title":"Devlog #00: Hello, world!","description":"","frontmatter":{"title":"Devlog #00: Hello, world!","outline":true,"lastUpdated":true,"prev":false,"next":false},"headers":[],"relativePath":"projects/crygotchi/devlog/00-hello_world.md","lastUpdated":1681172110000}'),s={name:"projects/crygotchi/devlog/00-hello_world.md"},i=a('<blockquote><p><a href="/projects/crygotchi/devlog/">Go back to Devlog</a></p></blockquote><h1 id="crygotchi-devlog-00-hello-world" tabindex="-1">Crygotchi Devlog 00: Hello, world! <a class="header-anchor" href="#crygotchi-devlog-00-hello-world" aria-label="Permalink to &quot;Crygotchi Devlog 00: Hello, world!&quot;">​</a></h1><p>Oh boy! Getting started with this project has been convoluted. It had quite a lot going on to it and I finally started taking this project more seriously.</p><p>My goal for this whole project is simple: Make a game I can play with my brain turned off. Yet, things aren&#39;t always that simple. Truth is, I&#39;ve never made a game myself before. Working on something like this has shown to be difficult, but a fun challenge.</p><h2 id="things-so-far" tabindex="-1">Things so far <a class="header-anchor" href="#things-so-far" aria-label="Permalink to &quot;Things so far&quot;">​</a></h2><p>Well, I&#39;m not entirely starting from scratch, actually from the time I&#39;m writing this, it&#39;s the first reboot I put on this project. Previously, I was developing this game on Unity3D. Don&#39;t get me wrong, Unity is good, but the baked potato I call my computer has shown to not like the heavy duty engine that Unity is. So, I decided to change, and for this I also wanted to pick on something new.</p><p>Rust is a relatively new programming language for me, I&#39;ve been using it on/off at work, but recently started shifting gears more towards it. And with the recent discovery of Bevy, weeeeeeeelp guess what?</p><p>I&#39;m currently working to try and get as much as done from the old Unity codebase into Rust, and things are promising. So far, I have a very rudimentary implementation of a cursor that can move around, a data implementation of the room tiles, and a neat debugging UI.</p><p><img src="'+r+'" alt="00_img1.png"></p><blockquote><p>The neat part of it is how egui has this docking system that&#39;s so damn good. Most of the Dev UI is taken from <a href="https://crates.io/crates/bevy-inspector-egui" target="_blank" rel="noreferrer"><code>bevy_inspector_egui</code></a> and the example script they mention</p></blockquote><h2 id="my-future-plans-and-goals" tabindex="-1">My future plans and goals <a class="header-anchor" href="#my-future-plans-and-goals" aria-label="Permalink to &quot;My future plans and goals&quot;">​</a></h2><p>I plan on starting to post the progress on this devlog, make some short entries, try to talk how things are going. Also, my secondary goal is to, hopefully in 3 months, have a first version of it out. Sounds far away but it gives me a sense of scope and timing that will push me into dedicating myself into this project.</p>',12),n=[i];function l(h,d,c,g,p,m){return o(),t("div",null,n)}const y=e(s,[["render",l]]);export{f as __pageData,y as default};
